### This file is generated by opam2nix.

self:
let
    lib = self.lib;
    pkgs = self.pkgs;
    repoPath = self.repoPath;
    repos = 
    {
      opam-repository = 
      rec {
        fetch = 
        {
          owner = "ocaml";
          repo = "opam-repository";
          rev = "ba60112b1addd60f567874e75a31a0c9477a8dce";
          sha256 = "1pn57fi26js2w2s7kjr8kyyi3qj65l11qdjzlsd58vaxrwi6a4za";
        };
        src = (pkgs.fetchFromGitHub) fetch;
      };
    };
    selection = self.selection;
in
{
  format-version = 4;
  ocaml-version = "4.08.1";
  repos = repos;
  selection = 
  {
    base = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:014xlh33ayf440lf9yx62z43q9977254911p3jyncw2hrmarny4h";
        package = "packages/base/base.v0.14.1";
      };
      pname = "base";
      src = pkgs.fetchurl 
      {
        sha256 = "13b0xc62ka8i2ry2r62gc194wzfdq1vqf2qygwrrk26pvqn8a9l9";
        url = "https://github.com/janestreet/base/archive/v0.14.1.tar.gz";
      };
      version = "v0.14.1";
    };
    base-bytes = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
        package = "packages/base-bytes/base-bytes.base";
      };
      pname = "base-bytes";
      src = null;
      version = "base";
    };
    base-threads = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
        package = "packages/base-threads/base-threads.base";
      };
      pname = "base-threads";
      src = null;
      version = "base";
    };
    base-unix = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
        package = "packages/base-unix/base-unix.base";
      };
      pname = "base-unix";
      src = null;
      version = "base";
    };
    conf-libffi = 
    {
      buildInputs = [ (pkgs.libffi or null) (pkgs.libffi-dev or null)
                       (pkgs.libffi-devel or null) ];
      opamInputs = 
      {
        conf-pkg-config = selection.conf-pkg-config;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1knn18qyrqmyx61nczz8mssrx0ssis6kpxdrmp2k6743l0sw7jr9";
        package = "packages/conf-libffi/conf-libffi.2.0.0";
      };
      pname = "conf-libffi";
      src = null;
      version = "2.0.0";
    };
    conf-pkg-config = 
    {
      buildInputs = [ (pkgs.pkgconfig) ];
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1rli6809glz5g9xwp4wsjidc39za4n58xcpkamy6fymfnqha225n";
        package = "packages/conf-pkg-config/conf-pkg-config.2";
      };
      pname = "conf-pkg-config";
      src = null;
      version = "2";
    };
    csexp = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:01lc95kz13gpki4xazyh6n20kv1g9inyb5myv240wl2n9v50z8fl";
        package = "packages/csexp/csexp.1.5.1";
      };
      pname = "csexp";
      src = pkgs.fetchurl 
      {
        sha256 = "00mc19f89pxpmjl62862ya5kjcfrl8rjzvs00j05h2m9bw3f81fn";
        url = "https://github.com/ocaml-dune/csexp/releases/download/1.5.1/csexp-1.5.1.tbz";
      };
      version = "1.5.1";
    };
    ctypes = 
    {
      opamInputs = 
      {
        conf-pkg-config = selection.conf-pkg-config;
        ctypes-foreign = selection.ctypes-foreign or null;
        integers = selection.integers;
        mirage-xen = selection.mirage-xen or null;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1cx2lcx24nwmv0szdii6xgvysnbvy395h9y8lq2ig7ypscw64ip2";
        package = "packages/ctypes/ctypes.0.17.1";
      };
      pname = "ctypes";
      src = pkgs.fetchurl 
      {
        sha256 = "1sd74bcsln51bnz11c82v6h6fv23dczfyfqqvv9rxa9wp4p3qrs1";
        url = "https://github.com/ocamllabs/ocaml-ctypes/archive/0.17.1.tar.gz";
      };
      version = "0.17.1";
    };
    ctypes-foreign = 
    {
      opamInputs = 
      {
        conf-libffi = selection.conf-libffi;
        conf-pkg-config = selection.conf-pkg-config;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0mr8z6hjdd8073zya2w0v5m5yv8scq90vw2d1paanib66m4y5sgm";
        package = "packages/ctypes-foreign/ctypes-foreign.0.18.0";
      };
      pname = "ctypes-foreign";
      src = null;
      version = "0.18.0";
    };
    dune = 
    {
      opamInputs = 
      {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        ocaml = selection.ocaml or null;
        ocamlfind-secondary = selection.ocamlfind-secondary or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:09s6k6kiw081kdh96zhp8ccgf8niw0391brfjl7gva7fansfqaqd";
        package = "packages/dune/dune.2.9.1";
      };
      pname = "dune";
      src = pkgs.fetchurl 
      {
        sha256 = "09lzq04b642iy0ljp59p32lgk3q8iphjh8fkdp69q29l5frgwx5k";
        url = "https://github.com/ocaml/dune/releases/download/2.9.1/dune-2.9.1.tbz";
      };
      version = "2.9.1";
    };
    dune-configurator = 
    {
      opamInputs = 
      {
        csexp = selection.csexp;
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1aik9w82r8vbb9fsfphpb0vam68s19ggkxprnqr99ygyalp2b71j";
        package = "packages/dune-configurator/dune-configurator.2.9.1";
      };
      pname = "dune-configurator";
      src = pkgs.fetchurl 
      {
        sha256 = "09lzq04b642iy0ljp59p32lgk3q8iphjh8fkdp69q29l5frgwx5k";
        url = "https://github.com/ocaml/dune/releases/download/2.9.1/dune-2.9.1.tbz";
      };
      version = "2.9.1";
    };
    integers = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1n15jqsbgd9xp7xn68sb52m4jdw66l6rlnsza67nw0r164i2nj00";
        package = "packages/integers/integers.0.5.1";
      };
      pname = "integers";
      src = pkgs.fetchurl 
      {
        sha256 = "1f1nkgpqjnavyw5vqlgrgsqaqdgzp0xngs4hx97dn7glraccw27n";
        url = "https://github.com/ocamllabs/ocaml-integers/archive/0.5.1.tar.gz";
      };
      version = "0.5.1";
    };
    mtime = 
    {
      opamInputs = 
      {
        js_of_ocaml = selection.js_of_ocaml or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1pvlkp6n3z75mjc5y0nvhf2s7fmzj8k84chwzvmyrpb786s9gqyh";
        package = "packages/mtime/mtime.1.2.0";
      };
      pname = "mtime";
      src = pkgs.fetchurl 
      {
        sha256 = "0zm1jvqkz3ghznfsm3bbv9q2zinp9grggdf7k9phjazjvny68xb8";
        url = "https://erratique.ch/software/mtime/releases/mtime-1.2.0.tbz";
      };
      version = "1.2.0";
    };
    ocaml = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-config = selection.ocaml-config;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0b1jl7a1jwl3pymdxcdh9mlqpd72zszy7kcmpczsd4fr8j71jxka";
        package = "packages/ocaml/ocaml.4.08.1";
      };
      pname = "ocaml";
      src = null;
      version = "4.08.1";
    };
    ocaml-base-compiler = 
    {
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:08vkdkzb63m4f304ijb0x0ddxcqdk67wdl71559mr2yzs4amrnvj";
        package = "packages/ocaml-base-compiler/ocaml-base-compiler.4.08.1";
      };
      pname = "ocaml-base-compiler";
      src = pkgs.fetchurl 
      {
        sha256 = "11fvsm861lr73lk181gl5iczprp8d83fvgc1q6dx8gxqhzad6gmm";
        url = "https://github.com/ocaml/ocaml/archive/4.08.1.tar.gz";
      };
      version = "4.08.1";
    };
    ocaml-config = 
    {
      opamInputs = 
      {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1gc3pyhb64j8a91bgbpy9fzljpb1ps2ylgw31ldx879vdkk46nhp";
        package = "packages/ocaml-config/ocaml-config.1";
      };
      pname = "ocaml-config";
      src = null;
      version = "1";
    };
    ocamlbuild = 
    {
      opamInputs = {
                     ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1r5qnrcxfypzyvjvb3zd9f66kr5ldxdl3g9rsi3pb6040krqb5w7";
        package = "packages/ocamlbuild/ocamlbuild.0.14.0";
      };
      pname = "ocamlbuild";
      src = pkgs.fetchurl 
      {
        sha256 = "0y1fskw9rg2y1zgb7whv3v8v4xw04svgxslf3856q2aqd7lrrcl7";
        url = "https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz";
      };
      version = "0.14.0";
    };
    ocamlfind = 
    {
      opamInputs = 
      {
        graphics = selection.graphics or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:11avrzm0gdc6mz7dazr8q18ir5429ckc36s2mv0l8722znq8lc3k";
        package = "packages/ocamlfind/ocamlfind.1.9.1";
      };
      pname = "ocamlfind";
      src = pkgs.fetchurl 
      {
        sha256 = "1qhgk25avmz4l4g47g8jvk0k1g9p9d5hbdrwpz2693a8ajyvhhib";
        url = "http://download.camlcity.org/download/findlib-1.9.1.tar.gz";
      };
      version = "1.9.1";
    };
    result = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0ybmvlisfz5swvbcq855czz1ysv9zxmb79f1m0x8284hczmfm98f";
        package = "packages/result/result.1.5";
      };
      pname = "result";
      src = pkgs.fetchurl 
      {
        sha256 = "0cpfp35fdwnv3p30a06wd0py3805qxmq3jmcynjc3x2qhlimwfkw";
        url = "https://github.com/janestreet/result/releases/download/1.5/result-1.5.tbz";
      };
      version = "1.5";
    };
    sexplib0 = 
    {
      opamInputs = 
      {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0k9vkjbiibja48c0yayal7xwyik3h3c3v4dwd3j7jbmras63ig2c";
        package = "packages/sexplib0/sexplib0.v0.14.0";
      };
      pname = "sexplib0";
      src = pkgs.fetchurl 
      {
        sha256 = "0adrc0r1vvvr41dcpj8jwkzh1dfgqf0mks9xlnnskqfm3a51iavg";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/sexplib0-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    stdio = 
    {
      opamInputs = 
      {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:19hlf6bgx1avq4ifwji2rj2f2j26v3nf8ywjnwh2m3dpvfqc4pvk";
        package = "packages/stdio/stdio.v0.14.0";
      };
      pname = "stdio";
      src = pkgs.fetchurl 
      {
        sha256 = "1hj5hraprqy2i90a690l11yjszvb99j818q3d684ryx6p2lddk0l";
        url = "https://ocaml.janestreet.com/ocaml-core/v0.14/files/stdio-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    tgls = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        ctypes = selection.ctypes;
        ctypes-foreign = selection.ctypes-foreign;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1qiqs27kly2izxgc5a19wr7gnbg5lry7z06ggxp5ncd5kaxmd1dx";
        package = "packages/tgls/tgls.0.8.5";
      };
      pname = "tgls";
      src = pkgs.fetchurl 
      {
        sha256 = "0xdc8j3grir91mbwigz9jhjgnlhy5g0sm9wdcsh3ih3fzzkjrdd3";
        url = "http://erratique.ch/software/tgls/releases/tgls-0.8.5.tbz";
      };
      version = "0.8.5";
    };
    topkg = 
    {
      opamInputs = 
      {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:1asjip3cr84b1n1n4q8b5zrcki87niz6imb9m9zaj2kqdywmp0m5";
        package = "packages/topkg/topkg.1.0.3";
      };
      pname = "topkg";
      src = pkgs.fetchurl 
      {
        sha256 = "0b77gsz9bqby8v77kfi4lans47x9p2lmzanzwins5r29maphb8y6";
        url = "http://erratique.ch/software/topkg/releases/topkg-1.0.3.tbz";
      };
      version = "1.0.3";
    };
    unix-errno = 
    {
      opamInputs = 
      {
        base-bytes = selection.base-bytes;
        base-unix = selection.base-unix or null;
        ctypes = selection.ctypes;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:0vmvwvvymyb1xp2zqwk3l5xsp8hbrma95r9kyqlm286phql4mm4g";
        package = "packages/unix-errno/unix-errno.0.5.2";
      };
      pname = "unix-errno";
      src = pkgs.fetchurl 
      {
        sha256 = "0gx8nr33ycqlvahi0r91a79xa3k5an1c4l3qza2xa1vnmndbjp7q";
        url = "https://github.com/dsheets/ocaml-unix-errno/archive/0.5.2.tar.gz";
      };
      version = "0.5.2";
    };
    unix-time = 
    {
      opamInputs = 
      {
        base-unix = selection.base-unix or null;
        ctypes = selection.ctypes;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        unix-errno = selection.unix-errno;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        hash = "sha256:11wcl244svn0vy813qkay4a5n8cvjy47gyddghf1y1614v35dynw";
        package = "packages/unix-time/unix-time.0.1.0";
      };
      pname = "unix-time";
      src = pkgs.fetchurl 
      {
        sha256 = "1j98p7h5p5560pfhn3kn8y7vkx3mp5si3g2jvd0x7mm9jlfg3kvi";
        url = "https://github.com/dsheets/ocaml-unix-time/archive/0.1.0.tar.gz";
      };
      version = "0.1.0";
    };
    wlroots = 
    {
      opamInputs = 
      {
        base = selection.base;
        ctypes = selection.ctypes;
        ctypes-foreign = selection.ctypes-foreign;
        dune = selection.dune;
        mtime = selection.mtime;
        ocaml = selection.ocaml;
        stdio = selection.stdio;
        tgls = selection.tgls;
        unix-time = selection.unix-time;
        xkbcommon = selection.xkbcommon;
      };
      opamSrc = "wlroots.opam";
      pname = "wlroots";
      src = self.directSrc "wlroots";
      version = "development";
    };
    xkbcommon = 
    {
      opamInputs = 
      {
        base = selection.base;
        ctypes = selection.ctypes;
        ctypes-foreign = selection.ctypes-foreign;
        dune = selection.dune;
        ocaml = selection.ocaml;
        stdio = selection.stdio;
      };
      opamSrc = "xkbcommon.opam";
      pname = "xkbcommon";
      src = self.directSrc "xkbcommon";
      version = "development";
    };
  };
}

